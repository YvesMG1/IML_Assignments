range.paras <- c(0.5, 1, 3, 5)
nugget.paras <- c(0, 0.5, 1, 3)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-20, 20), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
}
range.paras <- c(0.5, 1, 3, 5)
nugget.paras <- c(0.1, 0.2, 0.5, 1)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-20, 20), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
}
range.paras <- c(0.5, 1, 3, 5)
nugget.paras <- c(0, 0.2, 0.5, 1)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
}
#V52
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-20, 20), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
}
range.paras <- c(0.1, 0.5, 1, 3)
nugget.paras <- c(0, 0.1, 0.2, 0.5)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
}
#V52
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 20), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
}
range.paras <- c(0.25, 0.5, 1, 3)
nugget.paras <- c(0, 0.1, 0.2, 0.5)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
}
#V52
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 20), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topleft", paste0("nugget = ", nugget.paras), col = line.col, lty = 1)
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "Z(s)", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1)
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "", xlab = "", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1)
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "", xlab = "", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.5)
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "", xlab = "", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.8)
}
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", xlab = "", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
}
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", xlab = "", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.8)
}
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", xlab = "", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "Z(s)", xlab = "", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
require(maps)
require(fields)
require(spam)
require(mvtnorm)
simple.kriging <- function(CC, cc, Z) {
lambda <- t(solve(CC, cc))
c(lambda %*% Z)
}
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
z.pred52<- simple.kriging(C52, cc52, data$Z.s)
plot(data, xlim = c(0, 10), ylim = c(-20, 20), ylab = "Z(s)")
lines(s.new, z.pred12, col= 'red')
lines(s.new, z.pred52, col= 'blue')
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
require(maps)
require(fields)
require(spam)
require(mvtnorm)
require(gstat)
require(fields)
#load("data/leman.RData")
with(leman, quilt.plot(x, y, Cd, axes = FALSE, xlim = range(lake.data[, 1]), ylim = range(lake.data[,
2])))
lines(lake.data)
summary(leman$Cd)
pairs(leman[, c("x", "y", "Cd")])
vgm1 <- variogram(Cd ~ 1, ~x + y, leman)
plot(vgm1)
lm1 <- lm(Cd ~ poly(x, 2) + y, data = leman)
leman$residuals <- residuals(lm1)
with(leman, quilt.plot(x, y, residuals, axes = FALSE, xlim = range(lake.data[,
1]), ylim = range(lake.data[, 2])))
lines(lake.data)
vgm2 <- variogram(residuals ~ 1, ~x + y, leman)
plot(vgm2)
vgm2.fit <- fit.variogram(vgm2, vgm(1, "Sph", 15, 1))
vgm3.fit <- fit.variogram(vgm2, vgm(1, "Mat", 5, 1))
vgm3.fit <- fit.variogram(vgm2, vgm(1, "Gau", 10, 10))
plot(vgm2, vgm2.fit)
lines(vgm3.fit, )
vgm2.fit <- fit.variogram(vgm2, vgm(1, "Sph", 15, 1))
vgm3.fit <- fit.variogram(vgm2, vgm(1, "Mat", 5, 1))
vgm4.fit <- fit.variogram(vgm2, vgm(1, "Exp", 10, 10))
plot(vgm2, vgm2.fit)
plot(vgm2, vgm3.fit)
plot(vgm2, vgm4.fit)
vgm2.fit <- fit.variogram(vgm2, vgm(1, "Sph", 15, 1))
vgm3.fit <- fit.variogram(vgm2, vgm(1, "Mat", 5, 1))
vgm4.fit <- fit.variogram(vgm2, vgm(1, "Exp", 5, 1))
plot(vgm2, vgm2.fit)
plot(vgm2, vgm3.fit)
plot(vgm2, vgm4.fit)
vgm2.fit <- fit.variogram(vgm2, vgm(1, "Sph", 15, 1))
vgm3.fit <- fit.variogram(vgm2, vgm(1, "Mat", 5, 1))
vgm4.fit <- fit.variogram(vgm2, vgm(1, "Gau", 5, 1))
plot(vgm2, vgm2.fit)
plot(vgm2, vgm3.fit)
plot(vgm2, vgm4.fit)
data <- read.table("https://user.math.uzh.ch/vorlesungen/sta330/fs23/web/3.Data/transect.txt", header = TRUE)
plot(data, xlim = c(0, 10), ylab = "Z(s)")
dist_mat <- rdist(data[,1])
image.plot(dist_mat)
cov12 <- function(h, sill, range, nugget) ifelse(h == 0, nugget + sill, sill *
exp(-h/range))
cov52 <- function(h, sill, range, nugget) ifelse(h == 0, nugget + sill, sill *
(1 + sqrt(5) * h/range + 5/3 * (h/range)^2) * exp(-sqrt(5) * h/range))
sill <- 3
range <- 1
nugget <- 0
C12 <- cov12(dist_mat, sill, range, nugget)
C52 <- cov52(dist_mat, sill, range, nugget)
image.plot(C12, main = 'Covariance matrix, v = 1/2')
image.plot(C52, main = 'Covariance matrix, v = 5/2')
s.new <- seq(0,10,0.001)
s.new <- seq(0,10,0.001)
dist.mat.new <- rdist(data$s, s.new)
dist.mat.new[dist.mat.new < 1e-09] <- 0
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range, nugget = nugget)
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range, nugget = nugget)
image.plot(cc12, main = 'Covariance matrix, v = 1/2')
image.plot(cc52, main = 'Covariance matrix, v = 5/2')
simple.kriging <- function(CC, cc, Z) {
lambda <- t(solve(CC, cc))
c(lambda %*% Z)
}
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
z.pred52<- simple.kriging(C52, cc52, data$Z.s)
plot(data, xlim = c(0, 10), ylim = c(-20, 20), ylab = "Z(s)")
lines(s.new, z.pred12, col= 'red')
lines(s.new, z.pred52, col= 'blue')
simple.kriging <- function(CC, cc, Z) {
lambda <- t(solve(CC, cc))
c(lambda %*% Z)
}
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
z.pred52<- simple.kriging(C52, cc52, data$Z.s)
plot(data, xlim = c(0, 10), ylim = c(-20, 20), ylab = "Z(s)")
lines(s.new, z.pred12, col= 'red')
lines(s.new, z.pred52, col= 'blue')
range.paras <- c(0.25, 0.5, 1, 3)
nugget.paras <- c(0, 0.1, 0.2, 0.5)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", xlab = "", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
#V52
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "Z(s)", xlab = "", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
require(gstat)
require(fields)
load("leman.RData")
with(leman, quilt.plot(x, y, Cd, axes = FALSE, xlim = range(lake.data[, 1]), ylim = range(lake.data[,
2])))
lines(lake.data)
range.paras <- c(0.25, 0.5, 1, 3)
nugget.paras <- c(0, 0.1, 0.2, 0.5)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", xlab = "", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
#V52
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "Z(s)", xlab = "", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
range.paras <- c(0.25, 0.5, 1, 3)
nugget.paras <- c(0, 0.1, 0.2, 0.5)
line.col = c('red', 'blue', 'green', 'orange')
# V12
par(mfrow = c(2,2))
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-5, 5), ylab = "Z(s)", xlab = "", main = paste('v = 1/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C12 <- cov12(dist_mat, sill, range.paras[i], nugget.paras[j])
cc12 <- cov12(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred12 <- simple.kriging(C12, cc12, data$Z.s)
lines(s.new, z.pred12, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
#V52
for (i in 1:length(range.paras)) {
plot(data, xlim = c(0, 10), ylim = c(-15, 15), ylab = "Z(s)", xlab = "", main = paste('v = 5/2, range = ', range.paras[i]))
for (j in 1:length(nugget.paras)) {
C52 <- cov52(dist_mat, sill, range.paras[i], nugget.paras[j])
cc52 <- cov52(h = dist.mat.new, sill = sill, range = range.paras[i], nugget = nugget.paras[j])
z.pred52 <- simple.kriging(C52, cc52, data$Z.s)
lines(s.new, z.pred52, col = line.col[j])
}
legend("topright", paste0("nugget = ", nugget.paras), col = line.col, lty = 1, cex = 0.7)
}
vgm2.fit <- fit.variogram(vgm2, vgm(1, "Sph", 15, 1))
vgm3.fit <- fit.variogram(vgm2, vgm(1, "Mat", 5, 1))
vgm4.fit <- fit.variogram(vgm2, vgm(1, "Gau", 5, 1))
plot(vgm2, vgm2.fit, main = "Variogram: Sph")
plot(vgm2, vgm3.fit, main = "Variogram: Mat")
plot(vgm2, vgm4.fit, main = "Variogram: Gau")
?variogram
?vgm
install.packages('glmtrans')
library(glmtrans)
setwd("~/Documents/Bildung/ETH/Semester 2/IML/Coding Projects/IML/Task4")
x_pretrain <- read.csv('pretrain_features.csv')
View(cc52)
View(x_pretrain)
?read.csv
x_pretrain <- read.csv('pretrain_features.csv', row.names = 'Id')
View(x_pretrain)
x_pretrain <- subset(read.csv('pretrain_features.csv', row.names = 'Id'), !c('smiles'))
x_pretrain <- subset(read.csv('pretrain_features.csv', row.names = 'Id'), -c('smiles'))
x_pretrain <- subset(read.csv('pretrain_features.csv', row.names = 'Id'), select = -c('smiles'))
x_pretrain <- read.csv('pretrain_features.csv', row.names = 'Id')[-1]
x_train <- read.csv('train_features.csv', row.names = 'Id')[-1]
y_train <- read.csv('train_labels.csv', row.names = 'Id')[-1]
View(y_train)
y_train <- read.csv('train_labels.csv', row.names = 'Id')
View(y_train)
y_pretrain <- read.csv('pretrain_labels.csv', row.names = 'Id')
View(y_train)
View(y_pretrain)
x_test <- read.csv(('test_featuresl.csv', row.names = 'Id')
x_test <- read.csv('test_featuresl.csv', row.names = 'Id')
x_test <- read.csv('test_features.csv', row.names = 'Id')
x_test <- read.csv('test_features.csv', row.names = 'Id')[-1]
View(x_test)
x_val <- sample(20, x_train)
sample(20, x_train)
x_val <- sample(x_train, 20)
View(x_val)
x_train <- x_train[!x_val]
!x_val
x_train <- x_train[x_train != x_val]
x_train <- x_train[,x_train != x_val]
x_train != x_val
x_train <- x_train[,names(x_train) != names(x_val)]
x_train <- x_train[names(x_train) != names(x_val)]
x_train <- x_train[,names(x_train) != names(x_val)]
x_train <- x_train[!names(x_val)]
x_train <- x_train[!colnames(x_val)]
colnames(x_val)
x_train <- x_train[!colnames(x_val)]
x_train <- x_train[1]
x_train <- x_train[,1]
x_train <- x_train[:,1]
x_train <- x_train[1]
x_train <- read.csv('train_features.csv', row.names = 'Id')[-1]
x_train2 <- x_train[1]
colnames(x_val) != colna(x_train)
colnames(x_val) != colnames(x_train)
x_train2 <- x_train[-x_val,]
x_val <- sample(x_train, 20)
x_train2 <- x_train[-x_val,]
colnames(x_val) != colnames(x_train)
sum(colnames(x_val) != colnames(x_train))
sum(colnames(x_val) =0 colnames(x_train))
sum(colnames(x_val) == colnames(x_train))
library(caret)
x_train <- read.csv('train_features.csv', row.names = 'Id')[-1]
y_train <- read.csv('train_labels.csv', row.names = 'Id')
x_test <- read.csv('test_features.csv', row.names = 'Id')[-1]
View(x_train2)
?glmnet
?glmtrans
# Load necessary packages
library(spdep)
library(INLA)
install.packages('INLA')
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
library(spdep)
library(INLA)
# Download the data
download.file("https://www.math.uzh.ch/furrer/download/W_W2.RData", "W_W2.RData")
# Load the data
load("W_W2.RData")
# Prepare data
data$y <- scale(data$MortalityRate)
library(spdep)
library(INLA)
# Download the data
download.file("https://www.math.uzh.ch/furrer/download/W_W2.RData", "W_W2.RData")
# Load the data
load("W_W2.RData")
View(W)
View(W2)
data(Oral, package = "spam")
force(Oral)
View(Oral)
# Define the model formula
formula <- Y ~ 1 + f(region, model = "besag", graph = W)
# Fit the model
fit1 <- inla(formula, data = Oral, control.predictor = list(compute = TRUE))
summary(fit1)
